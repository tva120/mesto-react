{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","input","method","body","JSON","stringify","name","author","about","link","cardId","avatar","authorization","Card","props","key","card","_id","onClick","likes","length","type","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","userData","initialCards","onEditAvatar","onEditProfile","aria-label","onAddPlace","map","item","onCardClick","Footer","PopupWithForm","isOpen","noValidate","title","children","buttonName","id","onClose","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b867b579.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img src={logo} className=\"header__logo\" alt=\"Логотип\" />\n        </header>\n    )\n}\n\nexport default Header","export class Api{\r\n    constructor(options){\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo(){\r\n      return fetch(`${this.baseUrl}/users/me`, {headers: this.headers})\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        }).catch(err => console.log(`Загрузка информации о пользователе: ${err}`))\r\n    }\r\n\r\n    getInitialCards(){\r\n       return fetch(`${this.baseUrl}/cards`, {headers: this.headers})\r\n       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)).catch(err => console.log(`Загрузка карточек: ${err}`));\r\n    }\r\n\r\n    changeProfileInfo(input){\r\n      return fetch(`${this.baseUrl}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.author,\r\n          about: input.about\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Изменение информации: ${err}`));\r\n    }\r\n\r\n\r\n    addNewCard(input){\r\n      return fetch(`${this.baseUrl}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.name,\r\n          link: input.link\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Добавление карточки: ${err}`));\r\n    }\r\n\r\n    putLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'PUT', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Лайк: ${err}`));\r\n    }\r\n\r\n    deleteLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'DELETE', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Дизлайк: ${err}`));\r\n    }\r\n\r\n    changeAvatar(input){\r\n      return fetch(`${this.baseUrl}/users/me/avatar`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: input.avatar\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Аватар: ${err}`));\r\n    }\r\n\r\n    deleteCard(cardId){\r\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {method: 'DELETE', headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Удаление: ${err}`));\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n  headers: {\r\n    authorization: '624c4e77-b79e-4ce9-9f2d-48e259657516',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api","import React from 'react';\r\n\r\n\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"element\" key={props.card._id}>\r\n            <img className=\"element__image\" alt=\"\" src={props.card.link} onClick={handleClick} />\r\n\r\n\r\n            <div className=\"element__places\">\r\n                <h2 className=\"element__place\">{props.card.name}</h2>\r\n                <div className=\"element__likeblock\">\r\n                    <button className=\"element__button\"></button>\r\n                    <p className=\"element__likecount\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button className=\"element__trash\" type=\"button\"></button>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\n\nfunction Main(props) {\n    const [userName, setUserName] = React.useState('unknown');\n    const [userDescription, setUserDescription] = React.useState('not found');\n    const [userAvatar, setUserAvatar] = React.useState();\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([userData, initialCards]) => {\n                setUserName(userData.name);\n                setUserDescription(userData.about);\n                setUserAvatar(userData.avatar);\n                setCards(initialCards);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__content\">\n                    <div className=\"profile__avatar-pics\">\n                        <img src={userAvatar} className=\"profile__avatar\" alt=\"Жак-Ив Кусто\" />\n                        <button className=\"profile__edit\" onClick={props.onEditAvatar}></button>\n                    </div>\n\n                    <div className=\"profile__info\">\n                        <div className=\"profile__author\">\n                            <h2 className=\"profile__author-name\">{userName}</h2>\n                            <button className=\"profile__button-edit\" onClick={props.onEditProfile} aria-label=\"Редактировать\"></button>\n                        </div>\n                        <p className=\"profile__about\">{userDescription}</p>\n                    </div>\n                </div>\n                <button className=\"profile__button-add\" onClick={props.onAddPlace}></button>\n            </section>\n\n            <section className=\"elements\">\n                {cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} />)}\n            </section>\n        </main>\n    )\n}\n\nexport default Main","import React from 'react';\n\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia Трошков Вадим</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup-container\" name={props.name} noValidate>\r\n                <fieldset className=\"popup__user-info\">\r\n                    <h3 className=\"popup-container__text\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup-container__button-save\" type=\"submit\">{props.buttonName}</button>\r\n                </fieldset>\r\n                <button className=\"close-button popup-container__button-close\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\n\n\nfunction ImagePopup(props) {\n    return (\n        <div className={`popup popup_show_image ${props.card.isOpen && 'popup_opened'}`}>\n            <div className=\"popup-preview\">\n                <img className=\"popup-preview__picture\" alt={props.card.name} src={props.card.link} />\n                <p className=\"popup-preview__caption\">{props.card.name}</p>\n                <button className=\"close-button popup-preview__button-close\" id=\"close-button-picture\" type=\"reset\" onClick={props.onClose}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  \n  \n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpen: false,\n        link: '',\n        name: ''\n    });\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n\n    function handleCardClick(props) {\n        setSelectedCard({\n            isOpen: true,\n            name: props.name,\n            link: props.link\n        });\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"page\">\n                <Header />\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick} />\n\n\n                <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonName=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input className=\"popup-container__infoform popup-container__infoform_avatar\" name=\"avatar\" id=\"avatar-input\" type=\"url\"\n                                placeholder=\"Ссылка на аватар\" required />\n                            <span className=\"popup__error\" id=\"avatar-input-error\"></span>\n                        </>\n                    }\n                />\n\n                <PopupWithForm title=\"Редактировать профиль\" name=\"info\" buttonName=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input className=\"popup-container__infoform popup-container__infoform_author\" name=\"author\" id=\"author-input\"\n                            type=\"text\" placeholder=\"Автор\" required minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\"/>\n\n                            <span className=\"popup__error\" id=\"author-input-error\"></span>\n\n                            <input className=\"popup-container__infoform popup-container__infoform_about\" name=\"about\" id=\"about-input\"\n                            type=\"text\" placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\"/> \n\n                            <span className=\"popup__error\" id=\"about-input-error\"></span>      \n                        </>\n                    }\n                />\n\n                <PopupWithForm title=\"Новое место\" name=\"add\" buttonName=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                    children={\n                        <>\n                            \n                            <input className=\"popup-container__infoform popup-container__infoform_place-name\" name=\"place-name\" id=\"place-input\"\n                            type=\"text\" placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" />\n\n                            <span className=\"popup__error\" id=\"place-input-error\"></span>\n\n                            <input className=\"popup-container__infoform popup-container__infoform_place-link\" name=\"link\" id=\"link-input\"\n                            type=\"url\" placeholder=\"Ссылка на картинку\" required />\n\n                            <span className=\"popup__error\" id=\"link-input-error\"></span>\n                        </>\n                    }\n                />\n\n                <PopupWithForm title=\"Вы уверены?\" name=\"delete\" buttonName=\"Да\" isOpen={false} onClose={closeAllPopups} />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                <Footer />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.aa3e7ad2.svg\";"],"sourceRoot":""}