{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/api.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardTrashButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","key","link","onClick","name","onCardLike","length","type","onCardDelete","Main","avatar","onEditAvatar","onEditProfile","aria-label","about","onAddPlace","cards","map","item","onCardClick","Footer","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","input","method","body","JSON","stringify","author","cardId","authorization","PopupWithForm","isOpen","noValidate","onSubmit","title","children","buttonName","id","onClose","ImagePopup","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","required","minLength","maxLength","pattern","placeholder","defaultValue","onChange","target","value","EditAvatarPopup","avaRef","useRef","setAvatar","onUpdateAvatar","current","ref","AddPlacePopup","inputName","inputLink","onUpdatePlace","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","closePopups","all","getUserInfo","getInitialCards","user","initialCards","Provider","deleteCard","newCards","filter","c","deleteLike","putLike","newCard","data","changeAvatar","newData","changeProfileInfo","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.3a689be6.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img src={logo} className=\"header__logo\" alt=\"Логотип\" />\n        </header>\n    )\n}\n\nexport default Header","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleCardDelete() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn  = props.card.owner._id === currentUser._id;\r\n\r\n    const cardTrashButtonClassName = (\r\n        `element__trash ${isOwn  ? '' : 'element__trash_hidden'}`\r\n      );\r\n    \r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `element__button ${isLiked ? 'element__button_like-active' : ''}`;\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"element\" key={props.card._id}>\r\n            <img className=\"element__image\" alt=\"\" src={props.card.link} onClick={handleClick} />\r\n\r\n\r\n            <div className=\"element__places\">\r\n                <h2 className=\"element__place\">{props.card.name}</h2>\r\n                <div className=\"element__likeblock\">\r\n                    <button className={cardLikeButtonClassName}  onClick={handleLikeClick}></button>\r\n                    <p className=\"element__likecount\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button className={cardTrashButtonClassName} type=\"button\"  onClick={handleCardDelete}></button>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\n//import api from '../utils/api';\nimport Card from './Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__content\">\n                    <div className=\"profile__avatar-pics\">\n                        <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"Жак-Ив Кусто\" />\n                        <button className=\"profile__edit\" onClick={props.onEditAvatar}></button>\n                    </div>\n\n                    <div className=\"profile__info\">\n                        <div className=\"profile__author\">\n                            <h2 className=\"profile__author-name\">{currentUser.name}</h2>\n                            <button className=\"profile__button-edit\" onClick={props.onEditProfile} aria-label=\"Редактировать\"></button>\n                        </div>\n                        <p className=\"profile__about\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button className=\"profile__button-add\" onClick={props.onAddPlace}></button>\n            </section>\n\n            <section className=\"elements\">\n                {props.cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\n            </section>\n        </main>\n    )\n}\n\nexport default Main","import React from 'react';\n\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia Трошков Вадим</p>\n        </footer>\n    )\n}\n\nexport default Footer","export class Api{\r\n    constructor(options){\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n\r\n\r\n    getInitialCards(){\r\n       return fetch(`${this.baseUrl}/cards`, {headers: this.headers})\r\n       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)).catch(err => console.log(`Загрузка карточек: ${err}`));\r\n    }\r\n\r\n    getUserInfo(){\r\n        return fetch(`${this.baseUrl}/users/me`, {headers: this.headers})\r\n          .then(res => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n          }).catch(err => console.log(`Загрузка информации о пользователе: ${err}`))\r\n      }\r\n\r\n    changeProfileInfo(input){\r\n      return fetch(`${this.baseUrl}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.author,\r\n          about: input.about\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Изменение информации: ${err}`));\r\n    }\r\n\r\n\r\n    addNewCard(input){\r\n      return fetch(`${this.baseUrl}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.name,\r\n          link: input.link\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Добавление карточки: ${err}`));\r\n    }\r\n\r\n    putLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'PUT', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Лайк: ${err}`));\r\n    }\r\n\r\n    deleteLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'DELETE', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Дизлайк: ${err}`));\r\n    }\r\n\r\n    changeAvatar(input){\r\n      return fetch(`${this.baseUrl}/users/me/avatar`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: input.avatar\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Аватар: ${err}`));\r\n    }\r\n\r\n    deleteCard(cardId){\r\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {method: 'DELETE', headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Удаление: ${err}`));\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n  headers: {\r\n    authorization: '624c4e77-b79e-4ce9-9f2d-48e259657516',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup-container\" name={props.name} noValidate  onSubmit={props.onSubmit}>\r\n                <fieldset className=\"popup__user-info\">\r\n                    <h3 className=\"popup-container__text\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup-container__button-save\" type=\"submit\">{props.buttonName}</button>\r\n                </fieldset>\r\n                <button className=\"close-button popup-container__button-close\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\n\n\nfunction ImagePopup(props) {\n    return (\n        <div className={`popup popup_show_image ${props.card.isOpen && 'popup_opened'}`}>\n            <div className=\"popup-preview\">\n                <img className=\"popup-preview__picture\" alt={props.card.name} src={props.card.link} />\n                <p className=\"popup-preview__caption\">{props.card.name}</p>\n                <button className=\"close-button popup-preview__button-close\" id=\"close-button-picture\" type=\"reset\" onClick={props.onClose}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            author: name,\n            about: description\n        });\n    }\n\n  \n    return (\n        <PopupWithForm title=\"Редактировать профиль\" name=\"info\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup-container__infoform popup-container__infoform_author\" name=\"author\" id=\"name-input\" type=\"text\" required\n                        minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" placeholder=\"Автор\" defaultValue={name} onChange={handleNameChange} />\n\n                    <span className=\"popup__error\" id=\"author-input-error\"></span>\n\n                    <input className=\"popup-container__infoform popup-container__infoform_about\" name=\"about\" id=\"about-input\" type=\"text\" required\n                        minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" defaultValue={description} onChange={handleDescriptionChange} />\n\n                    <span className=\"popup__error\" id=\"about-input-error\"></span>\n                </>\n            }\n        />\n    )\n}\n\nexport default EditProfilePopup","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const avaRef = React.useRef();\n    const [avatar, setAvatar] = React.useState('');\n\n    React.useEffect(() => {\n        setAvatar(currentUser.avatar);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n                avatar: avaRef.current.value\n            }\n        );\n    }\n\n    function handleAvatarChange(e) {\n        setAvatar(e.target.value);\n    }\n\n    return (\n        <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup-container__infoform popup-container__infoform_avatar\" name=\"avatar\" id=\"avatar-input\" type=\"url\"\n                        placeholder=\"Ссылка на аватар\" required defaultValue={avatar} ref={avaRef} onChange={handleAvatarChange} />\n                    <span className=\"popup__error\" id=\"avatar-input-error\"></span>\n                </>\n            }\n        />\n    )\n}\n\nexport default EditAvatarPopup","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n    const inputName = React.useRef();\n    const inputLink = React.useRef();\n\n    function handleSubmit(e){\n        e.preventDefault();\n        props.onUpdatePlace({\n            name: inputName.current.value,\n            link: inputLink.current.value\n        });\n    }\n\n\n    return (\n        <PopupWithForm title=\"Новое место\" name=\"add\" buttonName=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n                        children={\n                            <>\n                                <input className=\"popup-container__infoform popup-container__infoform_place-name\" name=\"place-name\" id=\"place-input\" type=\"text\"\n                                    placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" ref={inputName} />\n                                \n                                <span className=\"popup__error\" id=\"place-input-error\"></span>\n                                \n                                <input className=\"popup-container__infoform popup-container__infoform_place-link\" name=\"link\" id=\"link-input\" type=\"url\"\n                                    placeholder=\"Ссылка на картинку\" required ref={inputLink} />\n                                \n                                <span className=\"popup__error\" id=\"link-input-error\"></span>\n                            </>\n                        }\n                    />\n    )\n}\n\nexport default AddPlacePopup","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\n\nfunction App() {\n  \n  \n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpen: false,\n        link: '',\n        name: ''\n    });\n\n    const [cards, setCards] = React.useState([]);\n\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, initialCards]) => {\n                setCurrentUser(user);\n                setCards([...initialCards]);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n\n    function handleCardClick(props) {\n        setSelectedCard({\n            isOpen: true,\n            name: props.name,\n            link: props.link\n        });\n    }\n\n    function handleUpdateAvatar(data){\n        api.changeAvatar(data)\n        .then((newData) => {\n            setCurrentUser(newData);\n            closePopups();\n        })\n        .catch((err) => {\n            console.log(`Ошибка: ${err}`);\n        })\n    }\n\n    function handleUpdateUser(data) {\n        api.changeProfileInfo(data)\n            .then((newData) => {\n                setCurrentUser(newData);\n                closePopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n\n    function handleUpdateCards(data) {\n        api.addNewCard(data)\n          .then((newCard) => {\n            setCards([newCard, ...cards]);\n            closePopups();\n          })\n          .catch((err) => {\n            console.log(`Ошибка: ${err}`);\n          })\n      }\n\n      function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        (!isLiked ? api.putLike(card._id) : api.deleteLike(card._id))\n        .then((newCard) => {\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          setCards(newCards);\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        })\n        .catch(err => console.log(err));\n    }\n\n    function closePopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"App\">\n            <div className=\"page\">\n                <Header />\n                <Main\n                        cards={cards}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDelete}\n                        onCardLike={handleCardLike} />\n\n\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closePopups} onUpdateAvatar={handleUpdateAvatar} />\n\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closePopups} onUpdateUser={handleUpdateUser} />\n\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closePopups} onUpdatePlace={handleUpdateCards}/>\n\n                    <PopupWithForm title=\"Вы уверены?\" name=\"delete\" buttonName=\"Да\" onClose={closePopups} />\n\n                    <ImagePopup card={selectedCard} onClose={closePopups} />\n\n                    \n                <Footer />\n            </div>\n        </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.aa3e7ad2.svg\";"],"sourceRoot":""}